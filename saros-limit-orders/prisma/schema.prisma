// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String   @id @default(cuid())
  walletAddress String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  orders    Order[]
  preferences UserPreferences?
}

model UserPreferences {
  id        String   @id @default(cuid())
  userId    String   @unique
  defaultSlippage Float @default(0.5)
  notificationEnabled Boolean @default(true)
  autoExecute Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Order {
  id            String   @id @default(cuid())
  userId        String
  poolAddress   String
  tokenIn       String
  tokenOut      String
  amountIn      String   // Store as string to handle BigInt
  targetPrice   Float
  targetBinId   Int
  orderType     String   // 'buy' or 'sell'
  status        String   @default("pending") // 'pending', 'partial', 'filled', 'cancelled', 'expired', 'failed'
  createdAt     DateTime @default(now())
  expiresAt     DateTime?
  executedAt    DateTime?
  executionPrice Float?
  executionAmount String?
  feesPaid      String?
  transactionSignature String?
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  executions OrderExecution[]
}

model OrderExecution {
  id            String   @id @default(cuid())
  orderId       String
  executionType String   // 'full', 'partial', 'cancelled'
  executedAmount String
  executionPrice Float
  feesPaid      String
  transactionSignature String
  executedAt    DateTime @default(now())
  
  order Order @relation(fields: [orderId], references: [id], onDelete: Cascade)
}

model PoolMonitoring {
  poolAddress   String   @id
  activeBinId   Int
  lastUpdated   DateTime @default(now())
  isMonitoring  Boolean  @default(true)
}